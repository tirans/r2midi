name: Configure Build Metadata
description: Configure build metadata based on build type

inputs:
  build-type:
    description: 'Build type (dev, staging, production)'
    required: true
  version:
    description: 'Application version'
    required: true
  platform:
    description: 'Target platform'
    required: true
  bundle-prefix:
    description: 'Bundle ID prefix'
    required: false
    default: ''
  server-name:
    description: 'Server application name'
    required: false
    default: ''
  client-name:
    description: 'Client application name'
    required: false
    default: ''
  author-name:
    description: 'Author name'
    required: false
    default: ''
  author-email:
    description: 'Author email'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Set build configuration
      shell: bash
      run: |
        echo "ðŸ”§ Configuring ${{ inputs.build-type }} build for ${{ inputs.platform }}..."
        
        # Set version
        echo "APP_VERSION=${{ inputs.version }}" >> $GITHUB_ENV
        
        # Set defaults
        BUNDLE_PREFIX="${{ inputs.bundle-prefix }}"
        SERVER_NAME="${{ inputs.server-name }}"
        CLIENT_NAME="${{ inputs.client-name }}"
        AUTHOR_NAME="${{ inputs.author-name }}"
        AUTHOR_EMAIL="${{ inputs.author-email }}"
        
        # Use defaults if not provided
        [ -z "$BUNDLE_PREFIX" ] && BUNDLE_PREFIX="com.r2midi"
        [ -z "$SERVER_NAME" ] && SERVER_NAME="R2MIDI Server"
        [ -z "$CLIENT_NAME" ] && CLIENT_NAME="R2MIDI Client"
        [ -z "$AUTHOR_NAME" ] && AUTHOR_NAME="R2MIDI Team"
        [ -z "$AUTHOR_EMAIL" ] && AUTHOR_EMAIL="team@r2midi.org"
        
        # Configure based on build type
        case "${{ inputs.build-type }}" in
          dev)
            echo "BUNDLE_PREFIX=dev.r2midi.test" >> $GITHUB_ENV
            echo "SERVER_NAME=$SERVER_NAME (DEV)" >> $GITHUB_ENV
            echo "CLIENT_NAME=$CLIENT_NAME (DEV)" >> $GITHUB_ENV
            echo "AUTHOR_NAME=$AUTHOR_NAME Dev" >> $GITHUB_ENV
            echo "AUTHOR_EMAIL=dev@r2midi.test" >> $GITHUB_ENV
            ;;
          staging)
            echo "BUNDLE_PREFIX=$BUNDLE_PREFIX" >> $GITHUB_ENV
            echo "SERVER_NAME=$SERVER_NAME" >> $GITHUB_ENV
            echo "CLIENT_NAME=$CLIENT_NAME" >> $GITHUB_ENV
            echo "AUTHOR_NAME=$AUTHOR_NAME" >> $GITHUB_ENV
            echo "AUTHOR_EMAIL=$AUTHOR_EMAIL" >> $GITHUB_ENV
            ;;
          production)
            echo "BUNDLE_PREFIX=$BUNDLE_PREFIX" >> $GITHUB_ENV
            echo "SERVER_NAME=$SERVER_NAME" >> $GITHUB_ENV
            echo "CLIENT_NAME=$CLIENT_NAME" >> $GITHUB_ENV
            echo "AUTHOR_NAME=$AUTHOR_NAME" >> $GITHUB_ENV
            echo "AUTHOR_EMAIL=$AUTHOR_EMAIL" >> $GITHUB_ENV
            ;;
        esac
        
        echo "ðŸ“‹ Build configuration:"
        echo "  Version: ${{ inputs.version }}"
        echo "  Platform: ${{ inputs.platform }}"
        echo "  Build Type: ${{ inputs.build-type }}"

    - name: Update pyproject.toml
      shell: bash
      run: |
        # Use Python script to update pyproject.toml
        if [ -f scripts/update_pyproject.py ]; then
          python scripts/update_pyproject.py \
            --version "${{ inputs.version }}" \
            --author "${AUTHOR_NAME}" \
            --author-email "${AUTHOR_EMAIL}" \
            --server-name "${SERVER_NAME}" \
            --client-name "${CLIENT_NAME}" \
            --bundle-prefix "${BUNDLE_PREFIX}"
        else
          # Fallback to sed if script doesn't exist
          sed -i.bak "s|version = \".*\"|version = \"${{ inputs.version }}\"|g" pyproject.toml
          sed -i.bak "s|bundle = \".*\"|bundle = \"${BUNDLE_PREFIX}\"|g" pyproject.toml
          sed -i.bak "s|author = \".*\"|author = \"${AUTHOR_NAME}\"|g" pyproject.toml
          sed -i.bak "s|author_email = \".*\"|author_email = \"${AUTHOR_EMAIL}\"|g" pyproject.toml
          
          # Update formal names
          sed -i.bak "s|formal_name = \"R2MIDI Server\"|formal_name = \"${SERVER_NAME}\"|g" pyproject.toml
          sed -i.bak "s|formal_name = \"R2MIDI Client\"|formal_name = \"${CLIENT_NAME}\"|g" pyproject.toml
        fi
