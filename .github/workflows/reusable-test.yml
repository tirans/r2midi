name: Reusable Test Workflow

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: "3.12"
      coverage:
        required: false
        type: boolean
        default: true

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix submodules
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git submodule deinit -f server/midi-presets || true
          rm -rf .git/modules/server/midi-presets || true
          git rm -rf server/midi-presets || true
          git submodule add https://github.com/tirans/midi-presets.git server/midi-presets
          git submodule init
          git submodule update --init --recursive

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y libasound2-dev libegl1 libjack-dev librtmidi-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov build twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f r2midi_client/requirements.txt ]; then pip install -r r2midi_client/requirements.txt; fi
          pip install -e ".[test]"

      - name: Lint with flake8
        run: |
          # Stop on Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true

      - name: Run tests
        run: |
          if [ "${{ inputs.coverage }}" = "true" ]; then
            PYTHONPATH=$PWD pytest --cov=server --cov=r2midi_client --cov-report=xml || true
          else
            PYTHONPATH=$PWD pytest || true
          fi

      - name: Upload coverage
        if: inputs.coverage && success()
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
